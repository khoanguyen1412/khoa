<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWDFbW1uYW1tb21tbW/pbW1v3W1tb1Fpa
        Wo1bW1sqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgCFtbW5hbW1v+W1tb2FtbW4laWlpdWlpaYFtb
        W4xbW1vUW1tb/FtbW5FmZmYFAAAAAAAAAAAAAAAAYGBgCFxcXMBbW1vuW1tbVwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAVxcXGFbW1vzW1tbt0BAQAQAAAAAAAAAAFtbW5FbW1vvWlpaMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXFxcMltbW/NcXFyLAAAAAFlZWStbW1v8XFxcVgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1tiW1tb+1lZWShbW1uSW1tb1AAAAAEAAAAAAAAAAAAA
        AAAAAAAAWlpaT1VVVQkAAAAAAAAAAAAAAAAAAAAAgICAAlpaWtlcXFyOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxcXKpbW1vNWVlZKAAAAAAAAAAAAAAAAAAAAABbW1uHW1tb1FtbW6tbW1urW1tbq1tb
        W6tbW1urW1tbq1tbW6tbW1vjW1tb/1paWvhcXFxyAAAAAQAAAAAAAAAAXFxcYVtbW/JbW1urW1tbq1tb
        W6tbW1urW1tbq1tbW6tbW1urW1tb41tbW/9aWlr4XFxcbwAAAAEAAAAAAAAAAFxcXGFbW1vyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXKpbW1vXWlpaMAAAAAAAAAAAAAAAAAAAAABbW1uHW1tb01tb
        W49bW1vYAAAAAQAAAAAAAAAAAAAAAAAAAABZWVlNYGBgCAAAAAAAAAAAAAAAAAAAAACAgIACWlpa2Vxc
        XI5ZWVkrW1tb/FxcXFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbYltb
        W/xbW1sqAAAAAFtbW5FbW1vtWVlZKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYMVtb
        W/NbW1uVAAAAAAAAAABgYGAIXFxcwFtbW+1bW1tXAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABWlpaVVtb
        W/BbW1u4VVVVBgAAAAAAAAAAAAAAAGBgYAhbW1uYW1tb/ltbW9hbW1uJWlpaXVpaWltbW1t+XFxc0Vtb
        W/xbW1uRZmZmBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWDFbW1uYW1tb21tbW+5bW1vrW1tb01pa
        Wo1bW1sqAAAAAAAAAAAAAAAAAAAAAPgfAADhhwAAz/MAAJ/5AAC//QAAP/wAAP58AAAAPgAAAD4AAP58
        AAA//AAAv/0AAJ/5AADP8wAA4ccAAPgfAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbWw5aWlpPW1tbkVtb
        W8hbW1vjW1tb+ltbW/xbW1voW1tbyVtbW6BbW1tcVVVVDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWiJbW1uRW1tb81tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v3W1tbnV5eXh4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQARcXFx9W1tb+ltb
        W/9bW1v/W1tb/1tbW/9bW1voW1tbyltbW7tbW1vBW1tb11tbW/NbW1v/W1tb/1tbW/9bW1v/W1tb9ltb
        W35mZmYFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeXl4bW1tbyltb
        W/9bW1v/W1tb/1tbW91bW1t4WVlZKwAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAltbWzVcXFyAXFxc3Ftb
        W/9bW1v/W1tb/1xcXMBZWVkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcJ1tb
        W+BbW1v/W1tb/1tbW+taWlpdgICAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVVUGW1tbcFtbW+1bW1v/W1tb/1tbW99bW1sqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5e
        XhtbW1voW1tb/1tbW/9cXFzAVVVVFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXl5eG1tbW8pbW1v/W1tb/1tbW+FZWVkXAAAAAAAAAAAAAAAAAAAAAAAA
        AABmZmYFW1tbxFtbW/9bW1v/W1tbrklJSQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgCFtbW6tbW1v/W1tb/1tbW8dgYGAIAAAAAAAA
        AAAAAAAAAAAAAFtbW35bW1v/W1tb/1xcXMBJSUkHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgCFtbW8lbW1v/W1tb/1tb
        W4kAAAAAAAAAAAAAAABcXFwZW1tb9FtbW/9cXFzqXl5eEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXl5eG1tb
        W+1bW1v/W1tb+VdXVyMAAAAAAAAAAFtbW5RbW1v/W1tb/1paWmMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXFxccltbW/9bW1v/W1tbmgAAAABVVVUGW1tb7ltbW/9bW1vegICAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQ8AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABJSUkHW1tb4FtbW/9bW1v0VVVVDFpaWk9bW1v/W1tb/1tbW3gAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaVVtbW6ZgYGAQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlqCW1tb/1tbW/9cXFxWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlpVW1tb/1tbW+RaWlpEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXDJbW1v/W1tb/1tbW5gAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWlVbW1v/W1tb/1tb
        W/1cXFyIYGBgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVtbW+1bW1v/W1tbx1pa
        WlVaWlpVWlpaVVpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVpaWlVaWlpVWlpajltb
        W/9bW1v/W1tb/1tbW/9cXFzRXV1dLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxc0Vtb
        W/9bW1vpW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v7XFxcgEBAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1u3W1tb/1paWvhbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/tcXFyAVVVVAwAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>